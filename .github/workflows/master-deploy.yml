name: Master deployment

on:
  push:
    branches:
      - master
  schedule:
    # run at 23:00 UTC+0 daily
    - cron: '0 23 * * *'

jobs:
  build:
    timeout-minutes: 20
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Netlify deployment
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_APP_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
          AIRTABLE_BASE_ID: ${{ secrets.AIRTABLE_BASE_ID }}
          CONTENTFUL_SPACE: ${{ secrets.CONTENTFUL_SPACE }}
          CONTENTFUL_TOKEN: ${{ secrets.CONTENTFUL_TOKEN }}
          FACEBOOK_APP_ID: ${{ secrets.FACEBOOK_APP_ID }}
        run: |
          yarn
          yarn build
          npx netlify-cli deploy --dir=out_publish --functions=out_functions --prod --message='Deployment for ${GITHUB_REF}'
      - name: Release
        if: "!contains(github.event.head_commit.message, 'update jobs')"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
      - uses: actions/github-script@0.3.0
        if: "!contains(github.event.head_commit.message, 'update jobs')"
        with:
          github-token: '${{secrets.GITHUB_TOKEN}}'
          script: |
            const core = require("@actions/core");
            const { readFileSync } = require("fs");
            const changelog = await readFileSync('CHANGELOG.md', 'utf8');
            const lines = changelog.split(/[\n]/g);
            const output = [];
            let count = 0;
            for(let line of lines){
              if(/\[\d+\.\d+\.\d+\]/g.test(line)){
                count++;
                if(count === 2){
                  break;
                }
              }
              output.push(line);
            };
            output[0] = output[0];
            const content = output.join('\\n');
            core.setOutput('content', content);
        id: release_info

      - name: Post release notes
        if: "!contains(github.event.head_commit.message, 'update jobs')"
        run: >
          curl --request POST \
            --url https://be.fortress.d.foundation/webhook/basecamp/changelog-message \
            --header 'Authorization: ApiKey ${{ secrets.RELEASE_TOKEN }}' \
            --header 'Content-Type: application/json' \
            --data '{
              "project": "WEBUILD",
              "message": "${{ steps.release_info.outputs.content }}"
            }'
